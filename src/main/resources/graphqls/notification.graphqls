extend type Subscription {
    notifications: Notification
}

extend type Query {
    getAllNotificationTypes: [NotificationType]
    getAllUnReadNotifications: [Notification]
    getNotifications(
        userId: String!,
        stamp: Float,
        limit: Int!
    ) : [Notification2]
    getUnreadNotifications(
        userId: String!
    ) : [Notification2]
    getNotificationTypes2 : [NotificationType2]
}

extend type Mutation {
    setNotificationRead(
        id: String
    ): Notification
    addNotificationType(
        name: String
    ): String
    deleteNotificationType(
        id: Int
    ): [NotificationType]
    updateNotificationType(
        id: Int!,
        name: String
    ): NotificationType
    addNewNotification(
        userId: String,
        nType: Int,
        title: String,
        msg: String
    ) : Notification2
    setNotificationReadFlag(
        userId: String!,
        stamp: Float!
    ) : Notification2
    addNewNotificationType2(
        nType: Int!,
        tName: String!,
        broadcast: Boolean!
    ) : NotificationType2
}


schema {
   query: Query,
   mutation: Mutation,
   subscription: Subscription
}