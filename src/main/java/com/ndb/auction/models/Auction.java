package com.ndb.auction.models;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Locale;

/**
 * TODOs: 
 * 1. primary key id when create new auction
 * 2. Map type or DynamoDB Document
 */

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

@DynamoDBTable(tableName = "Auction")
public class Auction extends BaseModel {
	
	// Auction status constants
	public static final Integer PENDING   = 0;
    public static final Integer COUNTDOWN = 1;
	public static final Integer STARTED   = 2;
	public static final Integer ENDED     = 3;

    private String auctionId;
    private Integer number;
    private Long startedAt;
    private Long endedAt;
    private Long duration; // second
    private Double totalToken;
    private Double minPrice;
    private Double sold;
    private AuctionStats stats;

    private List<AvatarSet> avatar;
    private Double token;

    private Integer status;
    
    public Auction() {
    	
    }
    
    public Auction(Integer _number, String _startedAt, long duration, Double _totalToken, Double _minPrice, List<AvatarSet> avatar, Double token) {
    	this.number = _number;
    	this.totalToken = _totalToken;
    	this.minPrice = _minPrice;
    	this.sold = 0.0;
    	
    	// cast String date time to Long epoch
    	// Date Format : 2021-10-24T12:00:00.000-0000
    	// check null
    	if(_startedAt != null) {
	    	SimpleDateFormat f = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ", Locale.getDefault());
	    	try {
	    	    Date d = f.parse(_startedAt);
	    	    long startedAtMill = d.getTime();
	    	    long endedAtMill = startedAtMill + duration;
	    	    this.startedAt = startedAtMill;
	    	    this.endedAt = endedAtMill;
                this.duration = duration / 1000;
	    	} catch (ParseException e) {
	    	    e.printStackTrace();
	    	}
    	}
    	// initial pending status
    	this.status = PENDING; 
    	AuctionStats auctionStats = new AuctionStats();
    	this.stats = auctionStats;
        this.avatar = avatar;
        this.token = token;
    }

    @DynamoDBHashKey(attributeName="auction_id")
    @DynamoDBAutoGeneratedKey
    public String getAuctionId() {
        return auctionId;
    }
    public void setAuctionId(String auctionId) {
        this.auctionId = auctionId;
    }

    @DynamoDBAttribute(attributeName="round_number")
    public Integer getNumber() {
        return number;
    }
    public void setNumber(Integer number) {
        this.number = number;
    }

    @DynamoDBAttribute(attributeName="started_at")
    public Long getStartedAt() {
        return startedAt;
    }
    public void setStartedAt(Long startedAt) {
        this.startedAt = startedAt;
    }

    @DynamoDBAttribute(attributeName="ended_at")
    public Long getEndedAt() {
        return endedAt;
    }
    public void setEndedAt(Long endedAt) {
        this.endedAt = endedAt;
    }

    @DynamoDBAttribute(attributeName="total_token")
    public Double getTotalToken() {
        return totalToken;
    }
    public void setTotalToken(Double totalToken) {
        this.totalToken = totalToken;
    }

    @DynamoDBAttribute(attributeName="min_price")
    public Double getMinPrice() {
        return minPrice;
    }
    public void setMinPrice(Double minPrice) {
        this.minPrice = minPrice;
    }

    @DynamoDBAttribute(attributeName="sold")
    public Double getSold() {
        return sold;
    }
    public void setSold(Double sold) {
        this.sold = sold;
    }

    @DynamoDBAttribute(attributeName="stats")
    public AuctionStats getStats() {
        return stats;
    }
    public void setStats(AuctionStats stats) {
        this.stats = stats;
    }

    @DynamoDBAttribute(attributeName="istatus")
    public Integer getStatus() {
        return status;
    }
    public void setStatus(Integer status) {
        this.status = status;
    }

    @DynamoDBAttribute(attributeName="duration")
    public Long getDuration() {
        return duration;
    }

    public void setDuration(Long duration) {
        this.duration = duration;
    }

    @DynamoDBAttribute(attributeName = "avatar_set")
    public List<AvatarSet> getAvatar() {
        return avatar;
    }

    public void setAvatar(List<AvatarSet> avatar) {
        this.avatar = avatar;
    }

    @DynamoDBAttribute(attributeName = "avatar_token")
    public Double getToken() {
        return token;
    }

    public void setToken(Double token) {
        this.token = token;
    }    
}
