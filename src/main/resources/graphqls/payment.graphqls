extend type Query {
	getStripePubKey : String!
	getStripeTransactionsByRound(
		roundId: String!
	) : [StripeTransaction]
	getStripeTransactionsByUser(
		userId: String!
	) : [StripeTransaction]
	getStripeTransaction(
		roundId: String!,
		userId: String!
	) : [StripeTransaction]
	getCryptoTransactionByCode(
		code: String!
	) : CryptoTransaction
	getCryptoTransactionByUser(
		userId: String!
	) : [CryptoTransaction]
	getCryptoTransactionByRound(
		roundId: String!
	) : [CryptoTransaction]
	getCryptoTransaction(
		roundId: String!,
		userId: String!
	) : [CryptoTransaction]
}

extend type Mutation {
	stripePayment (
		roundId: String,
		userId: String, 
		amount: Float,
		paymentIntentId: String
	) : PayResponse!
	createCryptoPayment(
		roundId: String!,
		userId: String!,
		amount: Float!
	) : CryptoTransaction
}

schema {
   query: Query,
   mutation: Mutation
}