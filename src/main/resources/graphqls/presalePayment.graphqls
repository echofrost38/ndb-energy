extend type Mutation {
    payStripeForPreSale(
        id: Int,
        presaleId: Int,
        orderId: Int,
        amount: Float,
        fiatAmount: Float,
        fiatType: String,
        paymentIntentId: String,
        paymentMethodId: String,
        isSaveCard: Boolean
    ) : PayResponse
    payStripeForPreSaleWithSavedCard(
        id: Int,
        presaleId: Int,
        orderId: Int,
        amount: Float,
        fiatAmount: Float,
        fiatType: String,
        cardId: Int,
        paymentIntentId: String
    ) : PayResponse
   
    # payment for presale
    createChargeForPresale(
        presaleId: Int,
        orderId: Int,
        coin: String,
        network: String,
        cryptoType: String,
    ) : CoinpaymentDepositTransaction
    
    # for paypal
    paypalForPresale(
        presaleId: Int,
        orderId: Int,
        currencyCode: String
    ) : OrderResponseDTO
    captureOrderForPresale(
        orderId: String
    ) : Boolean
    # for wallet
    payWalletForPresale(
        presaleId: Int,
        orderId: Int,
        cryptoType: String
    ) : String
}

extend type Query {
    # for Stripe
    getStripePresaleTx(
        orderBy: String
    ) : [StripePresaleTransaction]
    getStripePresaleTxByUser(
        userId: Int,
        orderBy: String
    ) : [StripePresaleTransaction]
    getStripePresaleTxById(
        id: Int
    ) : StripePresaleTransaction
    getStripePresaleTxByPresaleId(
        userId: Int,
        presaleId: Int,
        orderBy: String
    ) : [StripePresaleTransaction]
    
    # for Coinpayment
    getAllCryptoPresaleTx : [CoinpaymentDepositTransaction]
    getCryptoPresaleTxByUser : [CoinpaymentDepositTransaction]
    getCryptoPresaleTxById(
        id: Int
    ) : CoinpaymentDepositTransaction
    
    # for paypal
    getAllPaypalPresaleTxns(
        orderBy: String
    ) : [PaypalPresaleTransaction]
    getPaypalPresaleTxnsByUser(
        orderBy: String
    ) : [PaypalPresaleTransaction]
    getPaypalPresaleTxn(
        id: Int
    ) : PaypalPresaleTransaction
}

schema {
    mutation: Mutation,
    query: Query
}