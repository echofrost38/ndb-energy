extend type Mutation {
    # PayPal mutation
    generateWithdraw : String
    paypalWithdrawRequest(
        email: String,
        target: String,
        withdrawAmount: Float,
        sourceToken: String,
        code: String
    ) : PaypalWithdraw
    confirmPaypalWithdraw(
        id: Int,
        status: Int,
        deniedReason: String
    ) : Int

    # Crypto mutation
    cryptoWithdrawRequest(
        amount: Float,
        sourceToken: String,
        network: String,
        des: String,
        code: String
    ) : CryptoWithdraw
    confirmCryptoWithdraw(
        requestId: Int,
        status: Int,
        reason: String
    ) : Int

    # Bank withdraw
    bankWithdrawRequest(
        targetCurrency: String,
        amount: Float,
        sourceToken: String,
        mode: Int,
        country: String,
        holderName: String,
        bankName: String,
        accNumber: String,
        metadata: String,
        code: String
    ) : BankWithdrawRequest
    approveBankWithdrawRequest(
        id: Int
    ) : Int
    denyBankWithdrawRequest(
        id: Int,
        reason: String
    ) : Int
}

extend type Query {
    # PayPal Queries
    getPaypalWithdrawByUser : [PaypalWithdraw]
    getPaypalWithdrawByUserByAdmin(
        userId: Int
    ) : [PaypalWithdraw]
    getPaypalWithdrawByStatus(
        userId: Int,
        status: Int
    ) : [PaypalWithdraw]
    getPaypalPendingWithdrawRequests : [PaypalWithdraw]
    getPaypalPendingWithdrawRequestsByAdmin : [PaypalWithdraw]
    getPaypalWithdrawById(
        id: Int
    ) : PaypalWithdraw
    getPaypalWithdrawByIdByAdmin(
        id: Int
    ) : PaypalWithdraw
    getAllPaypalWithdraws : [PaypalWithdraw]


    # Crypto queries
    getCryptoWithdrawByUser : [CryptoWithdraw]
    getCryptoWithdrawByUserByAdmin(
        userId: Int
    ) : [CryptoWithdraw]
    getCryptoWithdrawByStatus(
        status: Int
    ) : [CryptoWithdraw]
    getCryptoWithdrawByStatusByAdmin(
        userId: Int,
        status: Int
    ) : [CryptoWithdraw]
    getCryptoPendingWithdrawRequests : [CryptoWithdraw]
    getCryptoWithdrawById(
        id: Int
    ) : CryptoWithdraw
    getAllCryptoWithdraws : [CryptoWithdraw]

    # Bank withdraw
    getPendingBankWithdrawRequests : [BankWithdrawRequest]
    getAllApprovedBankWithdrawRequests : [BankWithdrawRequest]
    getAllDeniedBankWithdrawRequests : [BankWithdrawRequest]
    getBankWithdrawRequests : [BankWithdrawRequest]
    getBankWithdrawRequest(
        id: Int
    ) : BankWithdrawRequest
}

schema {
    query: Query,
    mutation: Mutation
}